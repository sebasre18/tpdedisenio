#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.296
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TPdeDiseño
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TP-DISEÑO")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertParticipante(Participante instance);
    partial void UpdateParticipante(Participante instance);
    partial void DeleteParticipante(Participante instance);
    partial void InsertPartido_Participante(Partido_Participante instance);
    partial void UpdatePartido_Participante(Partido_Participante instance);
    partial void DeletePartido_Participante(Partido_Participante instance);
    partial void InsertRonda(Ronda instance);
    partial void UpdateRonda(Ronda instance);
    partial void DeleteRonda(Ronda instance);
    partial void InsertPartido(Partido instance);
    partial void UpdatePartido(Partido instance);
    partial void DeletePartido(Partido instance);
    partial void InsertCompetenciaDeportiva(CompetenciaDeportiva instance);
    partial void UpdateCompetenciaDeportiva(CompetenciaDeportiva instance);
    partial void DeleteCompetenciaDeportiva(CompetenciaDeportiva instance);
    partial void InsertLugar_de_Realización(Lugar_de_Realización instance);
    partial void UpdateLugar_de_Realización(Lugar_de_Realización instance);
    partial void DeleteLugar_de_Realización(Lugar_de_Realización instance);
    partial void InsertFixture(Fixture instance);
    partial void UpdateFixture(Fixture instance);
    partial void DeleteFixture(Fixture instance);
    partial void InsertTabla_de_Posiciones(Tabla_de_Posiciones instance);
    partial void UpdateTabla_de_Posiciones(Tabla_de_Posiciones instance);
    partial void DeleteTabla_de_Posiciones(Tabla_de_Posiciones instance);
    partial void InsertTabla_Participante(Tabla_Participante instance);
    partial void UpdateTabla_Participante(Tabla_Participante instance);
    partial void DeleteTabla_Participante(Tabla_Participante instance);
    partial void InsertHistorial_de_Resultado(Historial_de_Resultado instance);
    partial void UpdateHistorial_de_Resultado(Historial_de_Resultado instance);
    partial void DeleteHistorial_de_Resultado(Historial_de_Resultado instance);
    partial void InsertSet(Set instance);
    partial void UpdateSet(Set instance);
    partial void DeleteSet(Set instance);
    partial void InsertCompetencia_Lugar(Competencia_Lugar instance);
    partial void UpdateCompetencia_Lugar(Competencia_Lugar instance);
    partial void DeleteCompetencia_Lugar(Competencia_Lugar instance);
    partial void InsertRdo_Partido(Rdo_Partido instance);
    partial void UpdateRdo_Partido(Rdo_Partido instance);
    partial void DeleteRdo_Partido(Rdo_Partido instance);
    partial void InsertResultado(Resultado instance);
    partial void UpdateResultado(Resultado instance);
    partial void DeleteResultado(Resultado instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertDeporte(Deporte instance);
    partial void UpdateDeporte(Deporte instance);
    partial void DeleteDeporte(Deporte instance);
    partial void InsertForma_de_Puntuacion(Forma_de_Puntuacion instance);
    partial void UpdateForma_de_Puntuacion(Forma_de_Puntuacion instance);
    partial void DeleteForma_de_Puntuacion(Forma_de_Puntuacion instance);
    partial void InsertModalidad(Modalidad instance);
    partial void UpdateModalidad(Modalidad instance);
    partial void DeleteModalidad(Modalidad instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::TPdeDiseño.Properties.Settings.Default.TP_DISEÑOConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Participante> Participante
		{
			get
			{
				return this.GetTable<Participante>();
			}
		}
		
		public System.Data.Linq.Table<Partido_Participante> Partido_Participante
		{
			get
			{
				return this.GetTable<Partido_Participante>();
			}
		}
		
		public System.Data.Linq.Table<Ronda> Ronda
		{
			get
			{
				return this.GetTable<Ronda>();
			}
		}
		
		public System.Data.Linq.Table<Partido> Partido
		{
			get
			{
				return this.GetTable<Partido>();
			}
		}
		
		public System.Data.Linq.Table<CompetenciaDeportiva> CompetenciaDeportiva
		{
			get
			{
				return this.GetTable<CompetenciaDeportiva>();
			}
		}
		
		public System.Data.Linq.Table<Lugar_de_Realización> Lugar_de_Realización
		{
			get
			{
				return this.GetTable<Lugar_de_Realización>();
			}
		}
		
		public System.Data.Linq.Table<Fixture> Fixture
		{
			get
			{
				return this.GetTable<Fixture>();
			}
		}
		
		public System.Data.Linq.Table<Tabla_de_Posiciones> Tabla_de_Posiciones
		{
			get
			{
				return this.GetTable<Tabla_de_Posiciones>();
			}
		}
		
		public System.Data.Linq.Table<Tabla_Participante> Tabla_Participante
		{
			get
			{
				return this.GetTable<Tabla_Participante>();
			}
		}
		
		public System.Data.Linq.Table<Historial_de_Resultado> Historial_de_Resultado
		{
			get
			{
				return this.GetTable<Historial_de_Resultado>();
			}
		}
		
		public System.Data.Linq.Table<Participante_Rdo> Participante_Rdo
		{
			get
			{
				return this.GetTable<Participante_Rdo>();
			}
		}
		
		public System.Data.Linq.Table<Set> Set
		{
			get
			{
				return this.GetTable<Set>();
			}
		}
		
		public System.Data.Linq.Table<Competencia_Lugar> Competencia_Lugar
		{
			get
			{
				return this.GetTable<Competencia_Lugar>();
			}
		}
		
		public System.Data.Linq.Table<Rdo_Partido> Rdo_Partido
		{
			get
			{
				return this.GetTable<Rdo_Partido>();
			}
		}
		
		public System.Data.Linq.Table<Resultado> Resultado
		{
			get
			{
				return this.GetTable<Resultado>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Deporte> Deporte
		{
			get
			{
				return this.GetTable<Deporte>();
			}
		}
		
		public System.Data.Linq.Table<Forma_de_Puntuacion> Forma_de_Puntuacion
		{
			get
			{
				return this.GetTable<Forma_de_Puntuacion>();
			}
		}
		
		public System.Data.Linq.Table<Modalidad> Modalidad
		{
			get
			{
				return this.GetTable<Modalidad>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Participante")]
	public partial class Participante : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id_participante;
		
		private string _nombre;
		
		private string _e_mail;
		
		private string _imagen;
		
		private System.Data.Linq.Binary _perdido;
		
		private System.Data.Linq.Binary _eliminado;
		
		private System.Nullable<short> _id_competencia;
		
		private EntitySet<Partido_Participante> _Partido_Participante;
		
		private EntitySet<Ronda> _Ronda;
		
		private EntitySet<Tabla_Participante> _Tabla_Participante;
		
		private EntityRef<CompetenciaDeportiva> _CompetenciaDeportiva;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_participanteChanging(short value);
    partial void Onid_participanteChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void One_mailChanging(string value);
    partial void One_mailChanged();
    partial void OnimagenChanging(string value);
    partial void OnimagenChanged();
    partial void OnperdidoChanging(System.Data.Linq.Binary value);
    partial void OnperdidoChanged();
    partial void OneliminadoChanging(System.Data.Linq.Binary value);
    partial void OneliminadoChanged();
    partial void Onid_competenciaChanging(System.Nullable<short> value);
    partial void Onid_competenciaChanged();
    #endregion
		
		public Participante()
		{
			this._Partido_Participante = new EntitySet<Partido_Participante>(new Action<Partido_Participante>(this.attach_Partido_Participante), new Action<Partido_Participante>(this.detach_Partido_Participante));
			this._Ronda = new EntitySet<Ronda>(new Action<Ronda>(this.attach_Ronda), new Action<Ronda>(this.detach_Ronda));
			this._Tabla_Participante = new EntitySet<Tabla_Participante>(new Action<Tabla_Participante>(this.attach_Tabla_Participante), new Action<Tabla_Participante>(this.detach_Tabla_Participante));
			this._CompetenciaDeportiva = default(EntityRef<CompetenciaDeportiva>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_participante", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short id_participante
		{
			get
			{
				return this._id_participante;
			}
			set
			{
				if ((this._id_participante != value))
				{
					this.Onid_participanteChanging(value);
					this.SendPropertyChanging();
					this._id_participante = value;
					this.SendPropertyChanged("id_participante");
					this.Onid_participanteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[e-mail]", Storage="_e_mail", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string e_mail
		{
			get
			{
				return this._e_mail;
			}
			set
			{
				if ((this._e_mail != value))
				{
					this.One_mailChanging(value);
					this.SendPropertyChanging();
					this._e_mail = value;
					this.SendPropertyChanged("e_mail");
					this.One_mailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imagen", DbType="NVarChar(50)")]
		public string imagen
		{
			get
			{
				return this._imagen;
			}
			set
			{
				if ((this._imagen != value))
				{
					this.OnimagenChanging(value);
					this.SendPropertyChanging();
					this._imagen = value;
					this.SendPropertyChanged("imagen");
					this.OnimagenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_perdido", DbType="Binary(50)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary perdido
		{
			get
			{
				return this._perdido;
			}
			set
			{
				if ((this._perdido != value))
				{
					this.OnperdidoChanging(value);
					this.SendPropertyChanging();
					this._perdido = value;
					this.SendPropertyChanged("perdido");
					this.OnperdidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eliminado", DbType="Binary(50)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary eliminado
		{
			get
			{
				return this._eliminado;
			}
			set
			{
				if ((this._eliminado != value))
				{
					this.OneliminadoChanging(value);
					this.SendPropertyChanging();
					this._eliminado = value;
					this.SendPropertyChanged("eliminado");
					this.OneliminadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_competencia", DbType="SmallInt")]
		public System.Nullable<short> id_competencia
		{
			get
			{
				return this._id_competencia;
			}
			set
			{
				if ((this._id_competencia != value))
				{
					if (this._CompetenciaDeportiva.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_competenciaChanging(value);
					this.SendPropertyChanging();
					this._id_competencia = value;
					this.SendPropertyChanged("id_competencia");
					this.Onid_competenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Participante_Partido_Participante", Storage="_Partido_Participante", ThisKey="id_participante", OtherKey="id_participante")]
		public EntitySet<Partido_Participante> Partido_Participante
		{
			get
			{
				return this._Partido_Participante;
			}
			set
			{
				this._Partido_Participante.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Participante_Ronda", Storage="_Ronda", ThisKey="id_participante", OtherKey="id_libre")]
		public EntitySet<Ronda> Ronda
		{
			get
			{
				return this._Ronda;
			}
			set
			{
				this._Ronda.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Participante_Tabla_Participante", Storage="_Tabla_Participante", ThisKey="id_participante", OtherKey="id_participante")]
		public EntitySet<Tabla_Participante> Tabla_Participante
		{
			get
			{
				return this._Tabla_Participante;
			}
			set
			{
				this._Tabla_Participante.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetenciaDeportiva_Participante", Storage="_CompetenciaDeportiva", ThisKey="id_competencia", OtherKey="id_competencia", IsForeignKey=true)]
		public CompetenciaDeportiva CompetenciaDeportiva
		{
			get
			{
				return this._CompetenciaDeportiva.Entity;
			}
			set
			{
				CompetenciaDeportiva previousValue = this._CompetenciaDeportiva.Entity;
				if (((previousValue != value) 
							|| (this._CompetenciaDeportiva.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompetenciaDeportiva.Entity = null;
						previousValue.Participante.Remove(this);
					}
					this._CompetenciaDeportiva.Entity = value;
					if ((value != null))
					{
						value.Participante.Add(this);
						this._id_competencia = value.id_competencia;
					}
					else
					{
						this._id_competencia = default(Nullable<short>);
					}
					this.SendPropertyChanged("CompetenciaDeportiva");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Partido_Participante(Partido_Participante entity)
		{
			this.SendPropertyChanging();
			entity.Participante = this;
		}
		
		private void detach_Partido_Participante(Partido_Participante entity)
		{
			this.SendPropertyChanging();
			entity.Participante = null;
		}
		
		private void attach_Ronda(Ronda entity)
		{
			this.SendPropertyChanging();
			entity.Participante = this;
		}
		
		private void detach_Ronda(Ronda entity)
		{
			this.SendPropertyChanging();
			entity.Participante = null;
		}
		
		private void attach_Tabla_Participante(Tabla_Participante entity)
		{
			this.SendPropertyChanging();
			entity.Participante = this;
		}
		
		private void detach_Tabla_Participante(Tabla_Participante entity)
		{
			this.SendPropertyChanging();
			entity.Participante = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Partido_Participante")]
	public partial class Partido_Participante : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id_partido;
		
		private short _id_participante;
		
		private short _id;
		
		private EntityRef<Participante> _Participante;
		
		private EntityRef<Partido> _Partido;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_partidoChanging(short value);
    partial void Onid_partidoChanged();
    partial void Onid_participanteChanging(short value);
    partial void Onid_participanteChanged();
    partial void OnidChanging(short value);
    partial void OnidChanged();
    #endregion
		
		public Partido_Participante()
		{
			this._Participante = default(EntityRef<Participante>);
			this._Partido = default(EntityRef<Partido>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_partido", DbType="SmallInt NOT NULL")]
		public short id_partido
		{
			get
			{
				return this._id_partido;
			}
			set
			{
				if ((this._id_partido != value))
				{
					if (this._Partido.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_partidoChanging(value);
					this.SendPropertyChanging();
					this._id_partido = value;
					this.SendPropertyChanged("id_partido");
					this.Onid_partidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_participante", DbType="SmallInt NOT NULL")]
		public short id_participante
		{
			get
			{
				return this._id_participante;
			}
			set
			{
				if ((this._id_participante != value))
				{
					if (this._Participante.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_participanteChanging(value);
					this.SendPropertyChanging();
					this._id_participante = value;
					this.SendPropertyChanged("id_participante");
					this.Onid_participanteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Participante_Partido_Participante", Storage="_Participante", ThisKey="id_participante", OtherKey="id_participante", IsForeignKey=true)]
		public Participante Participante
		{
			get
			{
				return this._Participante.Entity;
			}
			set
			{
				Participante previousValue = this._Participante.Entity;
				if (((previousValue != value) 
							|| (this._Participante.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Participante.Entity = null;
						previousValue.Partido_Participante.Remove(this);
					}
					this._Participante.Entity = value;
					if ((value != null))
					{
						value.Partido_Participante.Add(this);
						this._id_participante = value.id_participante;
					}
					else
					{
						this._id_participante = default(short);
					}
					this.SendPropertyChanged("Participante");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Partido_Partido_Participante", Storage="_Partido", ThisKey="id_partido", OtherKey="id_partido", IsForeignKey=true)]
		public Partido Partido
		{
			get
			{
				return this._Partido.Entity;
			}
			set
			{
				Partido previousValue = this._Partido.Entity;
				if (((previousValue != value) 
							|| (this._Partido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Partido.Entity = null;
						previousValue.Partido_Participante.Remove(this);
					}
					this._Partido.Entity = value;
					if ((value != null))
					{
						value.Partido_Participante.Add(this);
						this._id_partido = value.id_partido;
					}
					else
					{
						this._id_partido = default(short);
					}
					this.SendPropertyChanged("Partido");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ronda")]
	public partial class Ronda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _nro_ronda;
		
		private short _id_fixture;
		
		private System.Data.Linq.Binary _ronda_perdedores;
		
		private System.Nullable<short> _id_libre;
		
		private short _id_ronda;
		
		private EntitySet<Partido> _Partido;
		
		private EntityRef<Participante> _Participante;
		
		private EntityRef<Fixture> _Fixture;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onnro_rondaChanging(short value);
    partial void Onnro_rondaChanged();
    partial void Onid_fixtureChanging(short value);
    partial void Onid_fixtureChanged();
    partial void Onronda_perdedoresChanging(System.Data.Linq.Binary value);
    partial void Onronda_perdedoresChanged();
    partial void Onid_libreChanging(System.Nullable<short> value);
    partial void Onid_libreChanged();
    partial void Onid_rondaChanging(short value);
    partial void Onid_rondaChanged();
    #endregion
		
		public Ronda()
		{
			this._Partido = new EntitySet<Partido>(new Action<Partido>(this.attach_Partido), new Action<Partido>(this.detach_Partido));
			this._Participante = default(EntityRef<Participante>);
			this._Fixture = default(EntityRef<Fixture>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nro_ronda", DbType="SmallInt NOT NULL")]
		public short nro_ronda
		{
			get
			{
				return this._nro_ronda;
			}
			set
			{
				if ((this._nro_ronda != value))
				{
					this.Onnro_rondaChanging(value);
					this.SendPropertyChanging();
					this._nro_ronda = value;
					this.SendPropertyChanged("nro_ronda");
					this.Onnro_rondaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_fixture", DbType="SmallInt NOT NULL")]
		public short id_fixture
		{
			get
			{
				return this._id_fixture;
			}
			set
			{
				if ((this._id_fixture != value))
				{
					if (this._Fixture.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_fixtureChanging(value);
					this.SendPropertyChanging();
					this._id_fixture = value;
					this.SendPropertyChanged("id_fixture");
					this.Onid_fixtureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ronda_perdedores", DbType="Binary(50)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ronda_perdedores
		{
			get
			{
				return this._ronda_perdedores;
			}
			set
			{
				if ((this._ronda_perdedores != value))
				{
					this.Onronda_perdedoresChanging(value);
					this.SendPropertyChanging();
					this._ronda_perdedores = value;
					this.SendPropertyChanged("ronda_perdedores");
					this.Onronda_perdedoresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_libre", DbType="SmallInt")]
		public System.Nullable<short> id_libre
		{
			get
			{
				return this._id_libre;
			}
			set
			{
				if ((this._id_libre != value))
				{
					if (this._Participante.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_libreChanging(value);
					this.SendPropertyChanging();
					this._id_libre = value;
					this.SendPropertyChanged("id_libre");
					this.Onid_libreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ronda", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short id_ronda
		{
			get
			{
				return this._id_ronda;
			}
			set
			{
				if ((this._id_ronda != value))
				{
					this.Onid_rondaChanging(value);
					this.SendPropertyChanging();
					this._id_ronda = value;
					this.SendPropertyChanged("id_ronda");
					this.Onid_rondaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ronda_Partido", Storage="_Partido", ThisKey="nro_ronda", OtherKey="id_ronda")]
		public EntitySet<Partido> Partido
		{
			get
			{
				return this._Partido;
			}
			set
			{
				this._Partido.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Participante_Ronda", Storage="_Participante", ThisKey="id_libre", OtherKey="id_participante", IsForeignKey=true)]
		public Participante Participante
		{
			get
			{
				return this._Participante.Entity;
			}
			set
			{
				Participante previousValue = this._Participante.Entity;
				if (((previousValue != value) 
							|| (this._Participante.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Participante.Entity = null;
						previousValue.Ronda.Remove(this);
					}
					this._Participante.Entity = value;
					if ((value != null))
					{
						value.Ronda.Add(this);
						this._id_libre = value.id_participante;
					}
					else
					{
						this._id_libre = default(Nullable<short>);
					}
					this.SendPropertyChanged("Participante");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fixture_Ronda", Storage="_Fixture", ThisKey="id_fixture", OtherKey="id_fixture", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Fixture Fixture
		{
			get
			{
				return this._Fixture.Entity;
			}
			set
			{
				Fixture previousValue = this._Fixture.Entity;
				if (((previousValue != value) 
							|| (this._Fixture.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fixture.Entity = null;
						previousValue.Ronda.Remove(this);
					}
					this._Fixture.Entity = value;
					if ((value != null))
					{
						value.Ronda.Add(this);
						this._id_fixture = value.id_fixture;
					}
					else
					{
						this._id_fixture = default(short);
					}
					this.SendPropertyChanged("Fixture");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Partido(Partido entity)
		{
			this.SendPropertyChanging();
			entity.Ronda = this;
		}
		
		private void detach_Partido(Partido entity)
		{
			this.SendPropertyChanging();
			entity.Ronda = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Partido")]
	public partial class Partido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id_partido;
		
		private System.Nullable<short> _id_ronda;
		
		private System.Nullable<short> _id_lugar;
		
		private EntitySet<Partido_Participante> _Partido_Participante;
		
		private EntitySet<Rdo_Partido> _Rdo_Partido;
		
		private EntityRef<Ronda> _Ronda;
		
		private EntityRef<Lugar_de_Realización> _Lugar_de_Realización;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_partidoChanging(short value);
    partial void Onid_partidoChanged();
    partial void Onid_rondaChanging(System.Nullable<short> value);
    partial void Onid_rondaChanged();
    partial void Onid_lugarChanging(System.Nullable<short> value);
    partial void Onid_lugarChanged();
    #endregion
		
		public Partido()
		{
			this._Partido_Participante = new EntitySet<Partido_Participante>(new Action<Partido_Participante>(this.attach_Partido_Participante), new Action<Partido_Participante>(this.detach_Partido_Participante));
			this._Rdo_Partido = new EntitySet<Rdo_Partido>(new Action<Rdo_Partido>(this.attach_Rdo_Partido), new Action<Rdo_Partido>(this.detach_Rdo_Partido));
			this._Ronda = default(EntityRef<Ronda>);
			this._Lugar_de_Realización = default(EntityRef<Lugar_de_Realización>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_partido", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short id_partido
		{
			get
			{
				return this._id_partido;
			}
			set
			{
				if ((this._id_partido != value))
				{
					this.Onid_partidoChanging(value);
					this.SendPropertyChanging();
					this._id_partido = value;
					this.SendPropertyChanged("id_partido");
					this.Onid_partidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ronda", DbType="SmallInt")]
		public System.Nullable<short> id_ronda
		{
			get
			{
				return this._id_ronda;
			}
			set
			{
				if ((this._id_ronda != value))
				{
					if (this._Ronda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_rondaChanging(value);
					this.SendPropertyChanging();
					this._id_ronda = value;
					this.SendPropertyChanged("id_ronda");
					this.Onid_rondaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_lugar", DbType="SmallInt")]
		public System.Nullable<short> id_lugar
		{
			get
			{
				return this._id_lugar;
			}
			set
			{
				if ((this._id_lugar != value))
				{
					if (this._Lugar_de_Realización.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_lugarChanging(value);
					this.SendPropertyChanging();
					this._id_lugar = value;
					this.SendPropertyChanged("id_lugar");
					this.Onid_lugarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Partido_Partido_Participante", Storage="_Partido_Participante", ThisKey="id_partido", OtherKey="id_partido")]
		public EntitySet<Partido_Participante> Partido_Participante
		{
			get
			{
				return this._Partido_Participante;
			}
			set
			{
				this._Partido_Participante.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Partido_Rdo_Partido", Storage="_Rdo_Partido", ThisKey="id_partido", OtherKey="id_partido")]
		public EntitySet<Rdo_Partido> Rdo_Partido
		{
			get
			{
				return this._Rdo_Partido;
			}
			set
			{
				this._Rdo_Partido.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ronda_Partido", Storage="_Ronda", ThisKey="id_ronda", OtherKey="nro_ronda", IsForeignKey=true, DeleteRule="CASCADE")]
		public Ronda Ronda
		{
			get
			{
				return this._Ronda.Entity;
			}
			set
			{
				Ronda previousValue = this._Ronda.Entity;
				if (((previousValue != value) 
							|| (this._Ronda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ronda.Entity = null;
						previousValue.Partido.Remove(this);
					}
					this._Ronda.Entity = value;
					if ((value != null))
					{
						value.Partido.Add(this);
						this._id_ronda = value.nro_ronda;
					}
					else
					{
						this._id_ronda = default(Nullable<short>);
					}
					this.SendPropertyChanged("Ronda");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lugar_de_Realización_Partido", Storage="_Lugar_de_Realización", ThisKey="id_lugar", OtherKey="id_lugar", IsForeignKey=true)]
		public Lugar_de_Realización Lugar_de_Realización
		{
			get
			{
				return this._Lugar_de_Realización.Entity;
			}
			set
			{
				Lugar_de_Realización previousValue = this._Lugar_de_Realización.Entity;
				if (((previousValue != value) 
							|| (this._Lugar_de_Realización.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lugar_de_Realización.Entity = null;
						previousValue.Partido.Remove(this);
					}
					this._Lugar_de_Realización.Entity = value;
					if ((value != null))
					{
						value.Partido.Add(this);
						this._id_lugar = value.id_lugar;
					}
					else
					{
						this._id_lugar = default(Nullable<short>);
					}
					this.SendPropertyChanged("Lugar_de_Realización");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Partido_Participante(Partido_Participante entity)
		{
			this.SendPropertyChanging();
			entity.Partido = this;
		}
		
		private void detach_Partido_Participante(Partido_Participante entity)
		{
			this.SendPropertyChanging();
			entity.Partido = null;
		}
		
		private void attach_Rdo_Partido(Rdo_Partido entity)
		{
			this.SendPropertyChanging();
			entity.Partido = this;
		}
		
		private void detach_Rdo_Partido(Rdo_Partido entity)
		{
			this.SendPropertyChanging();
			entity.Partido = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompetenciaDeportiva")]
	public partial class CompetenciaDeportiva : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id_competencia;
		
		private string _Reglamento;
		
		private string _Estado;
		
		private System.Nullable<System.DateTime> _fecha_baja;
		
		private System.Data.Linq.Binary _eliminado;
		
		private string _e_mail_usuario;
		
		private short _id_deporte;
		
		private short _id_modalidad;
		
		private string _nombre;
		
		private EntitySet<Participante> _Participante;
		
		private EntitySet<Fixture> _Fixture;
		
		private EntitySet<Tabla_de_Posiciones> _Tabla_de_Posiciones;
		
		private EntitySet<Competencia_Lugar> _Competencia_Lugar;
		
		private EntityRef<Usuario> _Usuario;
		
		private EntityRef<Deporte> _Deporte;
		
		private EntityRef<Modalidad> _Modalidad;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_competenciaChanging(short value);
    partial void Onid_competenciaChanged();
    partial void OnReglamentoChanging(string value);
    partial void OnReglamentoChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void Onfecha_bajaChanging(System.Nullable<System.DateTime> value);
    partial void Onfecha_bajaChanged();
    partial void OneliminadoChanging(System.Data.Linq.Binary value);
    partial void OneliminadoChanged();
    partial void One_mail_usuarioChanging(string value);
    partial void One_mail_usuarioChanged();
    partial void Onid_deporteChanging(short value);
    partial void Onid_deporteChanged();
    partial void Onid_modalidadChanging(short value);
    partial void Onid_modalidadChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public CompetenciaDeportiva()
		{
			this._Participante = new EntitySet<Participante>(new Action<Participante>(this.attach_Participante), new Action<Participante>(this.detach_Participante));
			this._Fixture = new EntitySet<Fixture>(new Action<Fixture>(this.attach_Fixture), new Action<Fixture>(this.detach_Fixture));
			this._Tabla_de_Posiciones = new EntitySet<Tabla_de_Posiciones>(new Action<Tabla_de_Posiciones>(this.attach_Tabla_de_Posiciones), new Action<Tabla_de_Posiciones>(this.detach_Tabla_de_Posiciones));
			this._Competencia_Lugar = new EntitySet<Competencia_Lugar>(new Action<Competencia_Lugar>(this.attach_Competencia_Lugar), new Action<Competencia_Lugar>(this.detach_Competencia_Lugar));
			this._Usuario = default(EntityRef<Usuario>);
			this._Deporte = default(EntityRef<Deporte>);
			this._Modalidad = default(EntityRef<Modalidad>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_competencia", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short id_competencia
		{
			get
			{
				return this._id_competencia;
			}
			set
			{
				if ((this._id_competencia != value))
				{
					this.Onid_competenciaChanging(value);
					this.SendPropertyChanging();
					this._id_competencia = value;
					this.SendPropertyChanged("id_competencia");
					this.Onid_competenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reglamento", DbType="NVarChar(MAX)")]
		public string Reglamento
		{
			get
			{
				return this._Reglamento;
			}
			set
			{
				if ((this._Reglamento != value))
				{
					this.OnReglamentoChanging(value);
					this.SendPropertyChanging();
					this._Reglamento = value;
					this.SendPropertyChanged("Reglamento");
					this.OnReglamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_baja", DbType="Date")]
		public System.Nullable<System.DateTime> fecha_baja
		{
			get
			{
				return this._fecha_baja;
			}
			set
			{
				if ((this._fecha_baja != value))
				{
					this.Onfecha_bajaChanging(value);
					this.SendPropertyChanging();
					this._fecha_baja = value;
					this.SendPropertyChanged("fecha_baja");
					this.Onfecha_bajaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eliminado", DbType="Binary(50)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary eliminado
		{
			get
			{
				return this._eliminado;
			}
			set
			{
				if ((this._eliminado != value))
				{
					this.OneliminadoChanging(value);
					this.SendPropertyChanging();
					this._eliminado = value;
					this.SendPropertyChanged("eliminado");
					this.OneliminadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[e-mail_usuario]", Storage="_e_mail_usuario", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string e_mail_usuario
		{
			get
			{
				return this._e_mail_usuario;
			}
			set
			{
				if ((this._e_mail_usuario != value))
				{
					this.One_mail_usuarioChanging(value);
					this.SendPropertyChanging();
					this._e_mail_usuario = value;
					this.SendPropertyChanged("e_mail_usuario");
					this.One_mail_usuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_deporte", DbType="SmallInt NOT NULL")]
		public short id_deporte
		{
			get
			{
				return this._id_deporte;
			}
			set
			{
				if ((this._id_deporte != value))
				{
					if (this._Deporte.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_deporteChanging(value);
					this.SendPropertyChanging();
					this._id_deporte = value;
					this.SendPropertyChanged("id_deporte");
					this.Onid_deporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_modalidad", DbType="SmallInt NOT NULL")]
		public short id_modalidad
		{
			get
			{
				return this._id_modalidad;
			}
			set
			{
				if ((this._id_modalidad != value))
				{
					if (this._Modalidad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_modalidadChanging(value);
					this.SendPropertyChanging();
					this._id_modalidad = value;
					this.SendPropertyChanged("id_modalidad");
					this.Onid_modalidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NVarChar(50)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetenciaDeportiva_Participante", Storage="_Participante", ThisKey="id_competencia", OtherKey="id_competencia")]
		public EntitySet<Participante> Participante
		{
			get
			{
				return this._Participante;
			}
			set
			{
				this._Participante.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetenciaDeportiva_Fixture", Storage="_Fixture", ThisKey="id_competencia", OtherKey="id_competencia")]
		public EntitySet<Fixture> Fixture
		{
			get
			{
				return this._Fixture;
			}
			set
			{
				this._Fixture.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetenciaDeportiva_Tabla_de_Posiciones", Storage="_Tabla_de_Posiciones", ThisKey="id_competencia", OtherKey="id_competencia")]
		public EntitySet<Tabla_de_Posiciones> Tabla_de_Posiciones
		{
			get
			{
				return this._Tabla_de_Posiciones;
			}
			set
			{
				this._Tabla_de_Posiciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetenciaDeportiva_Competencia_Lugar", Storage="_Competencia_Lugar", ThisKey="id_competencia", OtherKey="id_competencia")]
		public EntitySet<Competencia_Lugar> Competencia_Lugar
		{
			get
			{
				return this._Competencia_Lugar;
			}
			set
			{
				this._Competencia_Lugar.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_CompetenciaDeportiva", Storage="_Usuario", ThisKey="e_mail_usuario", OtherKey="e_mail", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.CompetenciaDeportiva.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.CompetenciaDeportiva.Add(this);
						this._e_mail_usuario = value.e_mail;
					}
					else
					{
						this._e_mail_usuario = default(string);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Deporte_CompetenciaDeportiva", Storage="_Deporte", ThisKey="id_deporte", OtherKey="id_deporte", IsForeignKey=true)]
		public Deporte Deporte
		{
			get
			{
				return this._Deporte.Entity;
			}
			set
			{
				Deporte previousValue = this._Deporte.Entity;
				if (((previousValue != value) 
							|| (this._Deporte.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Deporte.Entity = null;
						previousValue.CompetenciaDeportiva.Remove(this);
					}
					this._Deporte.Entity = value;
					if ((value != null))
					{
						value.CompetenciaDeportiva.Add(this);
						this._id_deporte = value.id_deporte;
					}
					else
					{
						this._id_deporte = default(short);
					}
					this.SendPropertyChanged("Deporte");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Modalidad_CompetenciaDeportiva", Storage="_Modalidad", ThisKey="id_modalidad", OtherKey="id_modalidad", IsForeignKey=true)]
		public Modalidad Modalidad
		{
			get
			{
				return this._Modalidad.Entity;
			}
			set
			{
				Modalidad previousValue = this._Modalidad.Entity;
				if (((previousValue != value) 
							|| (this._Modalidad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Modalidad.Entity = null;
						previousValue.CompetenciaDeportiva.Remove(this);
					}
					this._Modalidad.Entity = value;
					if ((value != null))
					{
						value.CompetenciaDeportiva.Add(this);
						this._id_modalidad = value.id_modalidad;
					}
					else
					{
						this._id_modalidad = default(short);
					}
					this.SendPropertyChanged("Modalidad");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Participante(Participante entity)
		{
			this.SendPropertyChanging();
			entity.CompetenciaDeportiva = this;
		}
		
		private void detach_Participante(Participante entity)
		{
			this.SendPropertyChanging();
			entity.CompetenciaDeportiva = null;
		}
		
		private void attach_Fixture(Fixture entity)
		{
			this.SendPropertyChanging();
			entity.CompetenciaDeportiva = this;
		}
		
		private void detach_Fixture(Fixture entity)
		{
			this.SendPropertyChanging();
			entity.CompetenciaDeportiva = null;
		}
		
		private void attach_Tabla_de_Posiciones(Tabla_de_Posiciones entity)
		{
			this.SendPropertyChanging();
			entity.CompetenciaDeportiva = this;
		}
		
		private void detach_Tabla_de_Posiciones(Tabla_de_Posiciones entity)
		{
			this.SendPropertyChanging();
			entity.CompetenciaDeportiva = null;
		}
		
		private void attach_Competencia_Lugar(Competencia_Lugar entity)
		{
			this.SendPropertyChanging();
			entity.CompetenciaDeportiva = this;
		}
		
		private void detach_Competencia_Lugar(Competencia_Lugar entity)
		{
			this.SendPropertyChanging();
			entity.CompetenciaDeportiva = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lugar de Realización")]
	public partial class Lugar_de_Realización : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id_lugar;
		
		private string _Nombre;
		
		private string _Descripción;
		
		private System.Data.Linq.Binary _eliminado;
		
		private string _e_mail_usuario;
		
		private EntitySet<Partido> _Partido;
		
		private EntitySet<Competencia_Lugar> _Competencia_Lugar;
		
		private EntitySet<Deporte> _Deporte;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_lugarChanging(short value);
    partial void Onid_lugarChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDescripciónChanging(string value);
    partial void OnDescripciónChanged();
    partial void OneliminadoChanging(System.Data.Linq.Binary value);
    partial void OneliminadoChanged();
    partial void One_mail_usuarioChanging(string value);
    partial void One_mail_usuarioChanged();
    #endregion
		
		public Lugar_de_Realización()
		{
			this._Partido = new EntitySet<Partido>(new Action<Partido>(this.attach_Partido), new Action<Partido>(this.detach_Partido));
			this._Competencia_Lugar = new EntitySet<Competencia_Lugar>(new Action<Competencia_Lugar>(this.attach_Competencia_Lugar), new Action<Competencia_Lugar>(this.detach_Competencia_Lugar));
			this._Deporte = new EntitySet<Deporte>(new Action<Deporte>(this.attach_Deporte), new Action<Deporte>(this.detach_Deporte));
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_lugar", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short id_lugar
		{
			get
			{
				return this._id_lugar;
			}
			set
			{
				if ((this._id_lugar != value))
				{
					this.Onid_lugarChanging(value);
					this.SendPropertyChanging();
					this._id_lugar = value;
					this.SendPropertyChanged("id_lugar");
					this.Onid_lugarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripción", DbType="NVarChar(MAX)")]
		public string Descripción
		{
			get
			{
				return this._Descripción;
			}
			set
			{
				if ((this._Descripción != value))
				{
					this.OnDescripciónChanging(value);
					this.SendPropertyChanging();
					this._Descripción = value;
					this.SendPropertyChanged("Descripción");
					this.OnDescripciónChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eliminado", DbType="Binary(50)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary eliminado
		{
			get
			{
				return this._eliminado;
			}
			set
			{
				if ((this._eliminado != value))
				{
					this.OneliminadoChanging(value);
					this.SendPropertyChanging();
					this._eliminado = value;
					this.SendPropertyChanged("eliminado");
					this.OneliminadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[e-mail_usuario]", Storage="_e_mail_usuario", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string e_mail_usuario
		{
			get
			{
				return this._e_mail_usuario;
			}
			set
			{
				if ((this._e_mail_usuario != value))
				{
					this.One_mail_usuarioChanging(value);
					this.SendPropertyChanging();
					this._e_mail_usuario = value;
					this.SendPropertyChanged("e_mail_usuario");
					this.One_mail_usuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lugar_de_Realización_Partido", Storage="_Partido", ThisKey="id_lugar", OtherKey="id_lugar")]
		public EntitySet<Partido> Partido
		{
			get
			{
				return this._Partido;
			}
			set
			{
				this._Partido.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lugar_de_Realización_Competencia_Lugar", Storage="_Competencia_Lugar", ThisKey="id_lugar", OtherKey="id_lugar")]
		public EntitySet<Competencia_Lugar> Competencia_Lugar
		{
			get
			{
				return this._Competencia_Lugar;
			}
			set
			{
				this._Competencia_Lugar.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lugar_de_Realización_Deporte", Storage="_Deporte", ThisKey="id_lugar", OtherKey="id_lugar")]
		public EntitySet<Deporte> Deporte
		{
			get
			{
				return this._Deporte;
			}
			set
			{
				this._Deporte.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Lugar_de_Realización", Storage="_Usuario", ThisKey="e_mail_usuario", OtherKey="e_mail", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Lugar_de_Realización.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Lugar_de_Realización.Add(this);
						this._e_mail_usuario = value.e_mail;
					}
					else
					{
						this._e_mail_usuario = default(string);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Partido(Partido entity)
		{
			this.SendPropertyChanging();
			entity.Lugar_de_Realización = this;
		}
		
		private void detach_Partido(Partido entity)
		{
			this.SendPropertyChanging();
			entity.Lugar_de_Realización = null;
		}
		
		private void attach_Competencia_Lugar(Competencia_Lugar entity)
		{
			this.SendPropertyChanging();
			entity.Lugar_de_Realización = this;
		}
		
		private void detach_Competencia_Lugar(Competencia_Lugar entity)
		{
			this.SendPropertyChanging();
			entity.Lugar_de_Realización = null;
		}
		
		private void attach_Deporte(Deporte entity)
		{
			this.SendPropertyChanging();
			entity.Lugar_de_Realización = this;
		}
		
		private void detach_Deporte(Deporte entity)
		{
			this.SendPropertyChanging();
			entity.Lugar_de_Realización = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fixture")]
	public partial class Fixture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id_fixture;
		
		private System.Data.Linq.Binary _eliminado;
		
		private System.Nullable<int> _ronda_actual;
		
		private short _id_competencia;
		
		private EntitySet<Ronda> _Ronda;
		
		private EntityRef<CompetenciaDeportiva> _CompetenciaDeportiva;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_fixtureChanging(short value);
    partial void Onid_fixtureChanged();
    partial void OneliminadoChanging(System.Data.Linq.Binary value);
    partial void OneliminadoChanged();
    partial void Onronda_actualChanging(System.Nullable<int> value);
    partial void Onronda_actualChanged();
    partial void Onid_competenciaChanging(short value);
    partial void Onid_competenciaChanged();
    #endregion
		
		public Fixture()
		{
			this._Ronda = new EntitySet<Ronda>(new Action<Ronda>(this.attach_Ronda), new Action<Ronda>(this.detach_Ronda));
			this._CompetenciaDeportiva = default(EntityRef<CompetenciaDeportiva>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_fixture", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short id_fixture
		{
			get
			{
				return this._id_fixture;
			}
			set
			{
				if ((this._id_fixture != value))
				{
					this.Onid_fixtureChanging(value);
					this.SendPropertyChanging();
					this._id_fixture = value;
					this.SendPropertyChanged("id_fixture");
					this.Onid_fixtureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eliminado", DbType="Binary(50)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary eliminado
		{
			get
			{
				return this._eliminado;
			}
			set
			{
				if ((this._eliminado != value))
				{
					this.OneliminadoChanging(value);
					this.SendPropertyChanging();
					this._eliminado = value;
					this.SendPropertyChanged("eliminado");
					this.OneliminadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ronda_actual", DbType="Int")]
		public System.Nullable<int> ronda_actual
		{
			get
			{
				return this._ronda_actual;
			}
			set
			{
				if ((this._ronda_actual != value))
				{
					this.Onronda_actualChanging(value);
					this.SendPropertyChanging();
					this._ronda_actual = value;
					this.SendPropertyChanged("ronda_actual");
					this.Onronda_actualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_competencia", DbType="SmallInt NOT NULL")]
		public short id_competencia
		{
			get
			{
				return this._id_competencia;
			}
			set
			{
				if ((this._id_competencia != value))
				{
					if (this._CompetenciaDeportiva.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_competenciaChanging(value);
					this.SendPropertyChanging();
					this._id_competencia = value;
					this.SendPropertyChanged("id_competencia");
					this.Onid_competenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fixture_Ronda", Storage="_Ronda", ThisKey="id_fixture", OtherKey="id_fixture")]
		public EntitySet<Ronda> Ronda
		{
			get
			{
				return this._Ronda;
			}
			set
			{
				this._Ronda.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetenciaDeportiva_Fixture", Storage="_CompetenciaDeportiva", ThisKey="id_competencia", OtherKey="id_competencia", IsForeignKey=true)]
		public CompetenciaDeportiva CompetenciaDeportiva
		{
			get
			{
				return this._CompetenciaDeportiva.Entity;
			}
			set
			{
				CompetenciaDeportiva previousValue = this._CompetenciaDeportiva.Entity;
				if (((previousValue != value) 
							|| (this._CompetenciaDeportiva.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompetenciaDeportiva.Entity = null;
						previousValue.Fixture.Remove(this);
					}
					this._CompetenciaDeportiva.Entity = value;
					if ((value != null))
					{
						value.Fixture.Add(this);
						this._id_competencia = value.id_competencia;
					}
					else
					{
						this._id_competencia = default(short);
					}
					this.SendPropertyChanged("CompetenciaDeportiva");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ronda(Ronda entity)
		{
			this.SendPropertyChanging();
			entity.Fixture = this;
		}
		
		private void detach_Ronda(Ronda entity)
		{
			this.SendPropertyChanging();
			entity.Fixture = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tabla de Posiciones")]
	public partial class Tabla_de_Posiciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id_tabla;
		
		private short _id_competencia;
		
		private EntitySet<Tabla_Participante> _Tabla_Participante;
		
		private EntityRef<CompetenciaDeportiva> _CompetenciaDeportiva;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_tablaChanging(short value);
    partial void Onid_tablaChanged();
    partial void Onid_competenciaChanging(short value);
    partial void Onid_competenciaChanged();
    #endregion
		
		public Tabla_de_Posiciones()
		{
			this._Tabla_Participante = new EntitySet<Tabla_Participante>(new Action<Tabla_Participante>(this.attach_Tabla_Participante), new Action<Tabla_Participante>(this.detach_Tabla_Participante));
			this._CompetenciaDeportiva = default(EntityRef<CompetenciaDeportiva>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tabla", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short id_tabla
		{
			get
			{
				return this._id_tabla;
			}
			set
			{
				if ((this._id_tabla != value))
				{
					this.Onid_tablaChanging(value);
					this.SendPropertyChanging();
					this._id_tabla = value;
					this.SendPropertyChanged("id_tabla");
					this.Onid_tablaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_competencia", DbType="SmallInt NOT NULL")]
		public short id_competencia
		{
			get
			{
				return this._id_competencia;
			}
			set
			{
				if ((this._id_competencia != value))
				{
					if (this._CompetenciaDeportiva.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_competenciaChanging(value);
					this.SendPropertyChanging();
					this._id_competencia = value;
					this.SendPropertyChanged("id_competencia");
					this.Onid_competenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tabla_de_Posiciones_Tabla_Participante", Storage="_Tabla_Participante", ThisKey="id_tabla", OtherKey="id_tabla")]
		public EntitySet<Tabla_Participante> Tabla_Participante
		{
			get
			{
				return this._Tabla_Participante;
			}
			set
			{
				this._Tabla_Participante.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetenciaDeportiva_Tabla_de_Posiciones", Storage="_CompetenciaDeportiva", ThisKey="id_competencia", OtherKey="id_competencia", IsForeignKey=true)]
		public CompetenciaDeportiva CompetenciaDeportiva
		{
			get
			{
				return this._CompetenciaDeportiva.Entity;
			}
			set
			{
				CompetenciaDeportiva previousValue = this._CompetenciaDeportiva.Entity;
				if (((previousValue != value) 
							|| (this._CompetenciaDeportiva.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompetenciaDeportiva.Entity = null;
						previousValue.Tabla_de_Posiciones.Remove(this);
					}
					this._CompetenciaDeportiva.Entity = value;
					if ((value != null))
					{
						value.Tabla_de_Posiciones.Add(this);
						this._id_competencia = value.id_competencia;
					}
					else
					{
						this._id_competencia = default(short);
					}
					this.SendPropertyChanged("CompetenciaDeportiva");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tabla_Participante(Tabla_Participante entity)
		{
			this.SendPropertyChanging();
			entity.Tabla_de_Posiciones = this;
		}
		
		private void detach_Tabla_Participante(Tabla_Participante entity)
		{
			this.SendPropertyChanging();
			entity.Tabla_de_Posiciones = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tabla_Participante")]
	public partial class Tabla_Participante : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id_tabla;
		
		private short _id_participante;
		
		private System.Nullable<int> _PTS;
		
		private System.Nullable<int> _PG;
		
		private System.Nullable<int> _PE;
		
		private System.Nullable<int> _PP;
		
		private System.Nullable<int> _GF;
		
		private System.Nullable<int> _GC;
		
		private System.Nullable<int> _D;
		
		private short _id_renglon;
		
		private string _nombrePart;
		
		private EntityRef<Participante> _Participante;
		
		private EntityRef<Tabla_de_Posiciones> _Tabla_de_Posiciones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_tablaChanging(short value);
    partial void Onid_tablaChanged();
    partial void Onid_participanteChanging(short value);
    partial void Onid_participanteChanged();
    partial void OnPTSChanging(System.Nullable<int> value);
    partial void OnPTSChanged();
    partial void OnPGChanging(System.Nullable<int> value);
    partial void OnPGChanged();
    partial void OnPEChanging(System.Nullable<int> value);
    partial void OnPEChanged();
    partial void OnPPChanging(System.Nullable<int> value);
    partial void OnPPChanged();
    partial void OnGFChanging(System.Nullable<int> value);
    partial void OnGFChanged();
    partial void OnGCChanging(System.Nullable<int> value);
    partial void OnGCChanged();
    partial void OnDChanging(System.Nullable<int> value);
    partial void OnDChanged();
    partial void Onid_renglonChanging(short value);
    partial void Onid_renglonChanged();
    partial void OnnombrePartChanging(string value);
    partial void OnnombrePartChanged();
    #endregion
		
		public Tabla_Participante()
		{
			this._Participante = default(EntityRef<Participante>);
			this._Tabla_de_Posiciones = default(EntityRef<Tabla_de_Posiciones>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tabla", DbType="SmallInt NOT NULL")]
		public short id_tabla
		{
			get
			{
				return this._id_tabla;
			}
			set
			{
				if ((this._id_tabla != value))
				{
					if (this._Tabla_de_Posiciones.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_tablaChanging(value);
					this.SendPropertyChanging();
					this._id_tabla = value;
					this.SendPropertyChanged("id_tabla");
					this.Onid_tablaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_participante", DbType="SmallInt NOT NULL")]
		public short id_participante
		{
			get
			{
				return this._id_participante;
			}
			set
			{
				if ((this._id_participante != value))
				{
					if (this._Participante.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_participanteChanging(value);
					this.SendPropertyChanging();
					this._id_participante = value;
					this.SendPropertyChanged("id_participante");
					this.Onid_participanteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTS", DbType="Int")]
		public System.Nullable<int> PTS
		{
			get
			{
				return this._PTS;
			}
			set
			{
				if ((this._PTS != value))
				{
					this.OnPTSChanging(value);
					this.SendPropertyChanging();
					this._PTS = value;
					this.SendPropertyChanged("PTS");
					this.OnPTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PG", DbType="Int")]
		public System.Nullable<int> PG
		{
			get
			{
				return this._PG;
			}
			set
			{
				if ((this._PG != value))
				{
					this.OnPGChanging(value);
					this.SendPropertyChanging();
					this._PG = value;
					this.SendPropertyChanged("PG");
					this.OnPGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PE", DbType="Int")]
		public System.Nullable<int> PE
		{
			get
			{
				return this._PE;
			}
			set
			{
				if ((this._PE != value))
				{
					this.OnPEChanging(value);
					this.SendPropertyChanging();
					this._PE = value;
					this.SendPropertyChanged("PE");
					this.OnPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PP", DbType="Int")]
		public System.Nullable<int> PP
		{
			get
			{
				return this._PP;
			}
			set
			{
				if ((this._PP != value))
				{
					this.OnPPChanging(value);
					this.SendPropertyChanging();
					this._PP = value;
					this.SendPropertyChanged("PP");
					this.OnPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GF", DbType="Int")]
		public System.Nullable<int> GF
		{
			get
			{
				return this._GF;
			}
			set
			{
				if ((this._GF != value))
				{
					this.OnGFChanging(value);
					this.SendPropertyChanging();
					this._GF = value;
					this.SendPropertyChanged("GF");
					this.OnGFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GC", DbType="Int")]
		public System.Nullable<int> GC
		{
			get
			{
				return this._GC;
			}
			set
			{
				if ((this._GC != value))
				{
					this.OnGCChanging(value);
					this.SendPropertyChanging();
					this._GC = value;
					this.SendPropertyChanged("GC");
					this.OnGCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D", DbType="Int")]
		public System.Nullable<int> D
		{
			get
			{
				return this._D;
			}
			set
			{
				if ((this._D != value))
				{
					this.OnDChanging(value);
					this.SendPropertyChanging();
					this._D = value;
					this.SendPropertyChanged("D");
					this.OnDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_renglon", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short id_renglon
		{
			get
			{
				return this._id_renglon;
			}
			set
			{
				if ((this._id_renglon != value))
				{
					this.Onid_renglonChanging(value);
					this.SendPropertyChanging();
					this._id_renglon = value;
					this.SendPropertyChanged("id_renglon");
					this.Onid_renglonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombrePart", DbType="NVarChar(50)")]
		public string nombrePart
		{
			get
			{
				return this._nombrePart;
			}
			set
			{
				if ((this._nombrePart != value))
				{
					this.OnnombrePartChanging(value);
					this.SendPropertyChanging();
					this._nombrePart = value;
					this.SendPropertyChanged("nombrePart");
					this.OnnombrePartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Participante_Tabla_Participante", Storage="_Participante", ThisKey="id_participante", OtherKey="id_participante", IsForeignKey=true)]
		public Participante Participante
		{
			get
			{
				return this._Participante.Entity;
			}
			set
			{
				Participante previousValue = this._Participante.Entity;
				if (((previousValue != value) 
							|| (this._Participante.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Participante.Entity = null;
						previousValue.Tabla_Participante.Remove(this);
					}
					this._Participante.Entity = value;
					if ((value != null))
					{
						value.Tabla_Participante.Add(this);
						this._id_participante = value.id_participante;
					}
					else
					{
						this._id_participante = default(short);
					}
					this.SendPropertyChanged("Participante");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tabla_de_Posiciones_Tabla_Participante", Storage="_Tabla_de_Posiciones", ThisKey="id_tabla", OtherKey="id_tabla", IsForeignKey=true)]
		public Tabla_de_Posiciones Tabla_de_Posiciones
		{
			get
			{
				return this._Tabla_de_Posiciones.Entity;
			}
			set
			{
				Tabla_de_Posiciones previousValue = this._Tabla_de_Posiciones.Entity;
				if (((previousValue != value) 
							|| (this._Tabla_de_Posiciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tabla_de_Posiciones.Entity = null;
						previousValue.Tabla_Participante.Remove(this);
					}
					this._Tabla_de_Posiciones.Entity = value;
					if ((value != null))
					{
						value.Tabla_Participante.Add(this);
						this._id_tabla = value.id_tabla;
					}
					else
					{
						this._id_tabla = default(short);
					}
					this.SendPropertyChanged("Tabla_de_Posiciones");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Historial de Resultado]")]
	public partial class Historial_de_Resultado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id_historial;
		
		private System.DateTime _fecha;
		
		private System.Nullable<int> _puntosP1;
		
		private System.Nullable<int> _puntosP2;
		
		private System.Nullable<short> _nro_set;
		
		private System.Data.Linq.Binary _empate;
		
		private System.Nullable<short> _ganador;
		
		private short _id_rdo;
		
		private EntityRef<Resultado> _Resultado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_historialChanging(short value);
    partial void Onid_historialChanged();
    partial void OnfechaChanging(System.DateTime value);
    partial void OnfechaChanged();
    partial void OnpuntosP1Changing(System.Nullable<int> value);
    partial void OnpuntosP1Changed();
    partial void OnpuntosP2Changing(System.Nullable<int> value);
    partial void OnpuntosP2Changed();
    partial void Onnro_setChanging(System.Nullable<short> value);
    partial void Onnro_setChanged();
    partial void OnempateChanging(System.Data.Linq.Binary value);
    partial void OnempateChanged();
    partial void OnganadorChanging(System.Nullable<short> value);
    partial void OnganadorChanged();
    partial void Onid_rdoChanging(short value);
    partial void Onid_rdoChanged();
    #endregion
		
		public Historial_de_Resultado()
		{
			this._Resultado = default(EntityRef<Resultado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_historial", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short id_historial
		{
			get
			{
				return this._id_historial;
			}
			set
			{
				if ((this._id_historial != value))
				{
					this.Onid_historialChanging(value);
					this.SendPropertyChanging();
					this._id_historial = value;
					this.SendPropertyChanged("id_historial");
					this.Onid_historialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha", DbType="Date NOT NULL")]
		public System.DateTime fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_puntosP1", DbType="Int")]
		public System.Nullable<int> puntosP1
		{
			get
			{
				return this._puntosP1;
			}
			set
			{
				if ((this._puntosP1 != value))
				{
					this.OnpuntosP1Changing(value);
					this.SendPropertyChanging();
					this._puntosP1 = value;
					this.SendPropertyChanged("puntosP1");
					this.OnpuntosP1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_puntosP2", DbType="Int")]
		public System.Nullable<int> puntosP2
		{
			get
			{
				return this._puntosP2;
			}
			set
			{
				if ((this._puntosP2 != value))
				{
					this.OnpuntosP2Changing(value);
					this.SendPropertyChanging();
					this._puntosP2 = value;
					this.SendPropertyChanged("puntosP2");
					this.OnpuntosP2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nro_set", DbType="SmallInt")]
		public System.Nullable<short> nro_set
		{
			get
			{
				return this._nro_set;
			}
			set
			{
				if ((this._nro_set != value))
				{
					this.Onnro_setChanging(value);
					this.SendPropertyChanging();
					this._nro_set = value;
					this.SendPropertyChanged("nro_set");
					this.Onnro_setChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empate", DbType="Binary(50)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary empate
		{
			get
			{
				return this._empate;
			}
			set
			{
				if ((this._empate != value))
				{
					this.OnempateChanging(value);
					this.SendPropertyChanging();
					this._empate = value;
					this.SendPropertyChanged("empate");
					this.OnempateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ganador", DbType="SmallInt")]
		public System.Nullable<short> ganador
		{
			get
			{
				return this._ganador;
			}
			set
			{
				if ((this._ganador != value))
				{
					this.OnganadorChanging(value);
					this.SendPropertyChanging();
					this._ganador = value;
					this.SendPropertyChanged("ganador");
					this.OnganadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rdo", DbType="SmallInt NOT NULL")]
		public short id_rdo
		{
			get
			{
				return this._id_rdo;
			}
			set
			{
				if ((this._id_rdo != value))
				{
					if (this._Resultado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_rdoChanging(value);
					this.SendPropertyChanging();
					this._id_rdo = value;
					this.SendPropertyChanged("id_rdo");
					this.Onid_rdoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resultado_Historial_de_Resultado", Storage="_Resultado", ThisKey="id_rdo", OtherKey="id_rdo", IsForeignKey=true)]
		public Resultado Resultado
		{
			get
			{
				return this._Resultado.Entity;
			}
			set
			{
				Resultado previousValue = this._Resultado.Entity;
				if (((previousValue != value) 
							|| (this._Resultado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resultado.Entity = null;
						previousValue.Historial_de_Resultado.Remove(this);
					}
					this._Resultado.Entity = value;
					if ((value != null))
					{
						value.Historial_de_Resultado.Add(this);
						this._id_rdo = value.id_rdo;
					}
					else
					{
						this._id_rdo = default(short);
					}
					this.SendPropertyChanged("Resultado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Participante_Rdo")]
	public partial class Participante_Rdo
	{
		
		private short _id_participante;
		
		private short _id_rdo;
		
		public Participante_Rdo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_participante", DbType="SmallInt NOT NULL")]
		public short id_participante
		{
			get
			{
				return this._id_participante;
			}
			set
			{
				if ((this._id_participante != value))
				{
					this._id_participante = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rdo", DbType="SmallInt NOT NULL")]
		public short id_rdo
		{
			get
			{
				return this._id_rdo;
			}
			set
			{
				if ((this._id_rdo != value))
				{
					this._id_rdo = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Set]")]
	public partial class Set : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _nro_set;
		
		private System.Nullable<int> _puntosP1;
		
		private System.Nullable<int> _puntosP2;
		
		private short _id_rdo;
		
		private short _id_set;
		
		private EntityRef<Resultado> _Resultado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onnro_setChanging(short value);
    partial void Onnro_setChanged();
    partial void OnpuntosP1Changing(System.Nullable<int> value);
    partial void OnpuntosP1Changed();
    partial void OnpuntosP2Changing(System.Nullable<int> value);
    partial void OnpuntosP2Changed();
    partial void Onid_rdoChanging(short value);
    partial void Onid_rdoChanged();
    partial void Onid_setChanging(short value);
    partial void Onid_setChanged();
    #endregion
		
		public Set()
		{
			this._Resultado = default(EntityRef<Resultado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nro_set", DbType="SmallInt NOT NULL")]
		public short nro_set
		{
			get
			{
				return this._nro_set;
			}
			set
			{
				if ((this._nro_set != value))
				{
					this.Onnro_setChanging(value);
					this.SendPropertyChanging();
					this._nro_set = value;
					this.SendPropertyChanged("nro_set");
					this.Onnro_setChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_puntosP1", DbType="Int")]
		public System.Nullable<int> puntosP1
		{
			get
			{
				return this._puntosP1;
			}
			set
			{
				if ((this._puntosP1 != value))
				{
					this.OnpuntosP1Changing(value);
					this.SendPropertyChanging();
					this._puntosP1 = value;
					this.SendPropertyChanged("puntosP1");
					this.OnpuntosP1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_puntosP2", DbType="Int")]
		public System.Nullable<int> puntosP2
		{
			get
			{
				return this._puntosP2;
			}
			set
			{
				if ((this._puntosP2 != value))
				{
					this.OnpuntosP2Changing(value);
					this.SendPropertyChanging();
					this._puntosP2 = value;
					this.SendPropertyChanged("puntosP2");
					this.OnpuntosP2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rdo", DbType="SmallInt NOT NULL")]
		public short id_rdo
		{
			get
			{
				return this._id_rdo;
			}
			set
			{
				if ((this._id_rdo != value))
				{
					if (this._Resultado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_rdoChanging(value);
					this.SendPropertyChanging();
					this._id_rdo = value;
					this.SendPropertyChanged("id_rdo");
					this.Onid_rdoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_set", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short id_set
		{
			get
			{
				return this._id_set;
			}
			set
			{
				if ((this._id_set != value))
				{
					this.Onid_setChanging(value);
					this.SendPropertyChanging();
					this._id_set = value;
					this.SendPropertyChanged("id_set");
					this.Onid_setChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resultado_Set", Storage="_Resultado", ThisKey="id_rdo", OtherKey="id_rdo", IsForeignKey=true)]
		public Resultado Resultado
		{
			get
			{
				return this._Resultado.Entity;
			}
			set
			{
				Resultado previousValue = this._Resultado.Entity;
				if (((previousValue != value) 
							|| (this._Resultado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resultado.Entity = null;
						previousValue.Set.Remove(this);
					}
					this._Resultado.Entity = value;
					if ((value != null))
					{
						value.Set.Add(this);
						this._id_rdo = value.id_rdo;
					}
					else
					{
						this._id_rdo = default(short);
					}
					this.SendPropertyChanged("Resultado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Competencia_Lugar")]
	public partial class Competencia_Lugar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id_competencia;
		
		private short _id_lugar;
		
		private System.Nullable<int> _turnos_por_fecha;
		
		private short _id;
		
		private EntityRef<CompetenciaDeportiva> _CompetenciaDeportiva;
		
		private EntityRef<Lugar_de_Realización> _Lugar_de_Realización;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_competenciaChanging(short value);
    partial void Onid_competenciaChanged();
    partial void Onid_lugarChanging(short value);
    partial void Onid_lugarChanged();
    partial void Onturnos_por_fechaChanging(System.Nullable<int> value);
    partial void Onturnos_por_fechaChanged();
    partial void OnidChanging(short value);
    partial void OnidChanged();
    #endregion
		
		public Competencia_Lugar()
		{
			this._CompetenciaDeportiva = default(EntityRef<CompetenciaDeportiva>);
			this._Lugar_de_Realización = default(EntityRef<Lugar_de_Realización>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_competencia", DbType="SmallInt NOT NULL")]
		public short id_competencia
		{
			get
			{
				return this._id_competencia;
			}
			set
			{
				if ((this._id_competencia != value))
				{
					if (this._CompetenciaDeportiva.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_competenciaChanging(value);
					this.SendPropertyChanging();
					this._id_competencia = value;
					this.SendPropertyChanged("id_competencia");
					this.Onid_competenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_lugar", DbType="SmallInt NOT NULL")]
		public short id_lugar
		{
			get
			{
				return this._id_lugar;
			}
			set
			{
				if ((this._id_lugar != value))
				{
					if (this._Lugar_de_Realización.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_lugarChanging(value);
					this.SendPropertyChanging();
					this._id_lugar = value;
					this.SendPropertyChanged("id_lugar");
					this.Onid_lugarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[turnos por fecha]", Storage="_turnos_por_fecha", DbType="Int")]
		public System.Nullable<int> turnos_por_fecha
		{
			get
			{
				return this._turnos_por_fecha;
			}
			set
			{
				if ((this._turnos_por_fecha != value))
				{
					this.Onturnos_por_fechaChanging(value);
					this.SendPropertyChanging();
					this._turnos_por_fecha = value;
					this.SendPropertyChanged("turnos_por_fecha");
					this.Onturnos_por_fechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetenciaDeportiva_Competencia_Lugar", Storage="_CompetenciaDeportiva", ThisKey="id_competencia", OtherKey="id_competencia", IsForeignKey=true)]
		public CompetenciaDeportiva CompetenciaDeportiva
		{
			get
			{
				return this._CompetenciaDeportiva.Entity;
			}
			set
			{
				CompetenciaDeportiva previousValue = this._CompetenciaDeportiva.Entity;
				if (((previousValue != value) 
							|| (this._CompetenciaDeportiva.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompetenciaDeportiva.Entity = null;
						previousValue.Competencia_Lugar.Remove(this);
					}
					this._CompetenciaDeportiva.Entity = value;
					if ((value != null))
					{
						value.Competencia_Lugar.Add(this);
						this._id_competencia = value.id_competencia;
					}
					else
					{
						this._id_competencia = default(short);
					}
					this.SendPropertyChanged("CompetenciaDeportiva");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lugar_de_Realización_Competencia_Lugar", Storage="_Lugar_de_Realización", ThisKey="id_lugar", OtherKey="id_lugar", IsForeignKey=true)]
		public Lugar_de_Realización Lugar_de_Realización
		{
			get
			{
				return this._Lugar_de_Realización.Entity;
			}
			set
			{
				Lugar_de_Realización previousValue = this._Lugar_de_Realización.Entity;
				if (((previousValue != value) 
							|| (this._Lugar_de_Realización.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lugar_de_Realización.Entity = null;
						previousValue.Competencia_Lugar.Remove(this);
					}
					this._Lugar_de_Realización.Entity = value;
					if ((value != null))
					{
						value.Competencia_Lugar.Add(this);
						this._id_lugar = value.id_lugar;
					}
					else
					{
						this._id_lugar = default(short);
					}
					this.SendPropertyChanged("Lugar_de_Realización");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rdo_Partido")]
	public partial class Rdo_Partido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id_partido;
		
		private short _id_rdo;
		
		private System.Nullable<short> _id_ausente;
		
		private short _id;
		
		private EntityRef<Partido> _Partido;
		
		private EntityRef<Resultado> _Resultado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_partidoChanging(short value);
    partial void Onid_partidoChanged();
    partial void Onid_rdoChanging(short value);
    partial void Onid_rdoChanged();
    partial void Onid_ausenteChanging(System.Nullable<short> value);
    partial void Onid_ausenteChanged();
    partial void OnidChanging(short value);
    partial void OnidChanged();
    #endregion
		
		public Rdo_Partido()
		{
			this._Partido = default(EntityRef<Partido>);
			this._Resultado = default(EntityRef<Resultado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_partido", DbType="SmallInt NOT NULL")]
		public short id_partido
		{
			get
			{
				return this._id_partido;
			}
			set
			{
				if ((this._id_partido != value))
				{
					if (this._Partido.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_partidoChanging(value);
					this.SendPropertyChanging();
					this._id_partido = value;
					this.SendPropertyChanged("id_partido");
					this.Onid_partidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rdo", DbType="SmallInt NOT NULL")]
		public short id_rdo
		{
			get
			{
				return this._id_rdo;
			}
			set
			{
				if ((this._id_rdo != value))
				{
					if (this._Resultado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_rdoChanging(value);
					this.SendPropertyChanging();
					this._id_rdo = value;
					this.SendPropertyChanged("id_rdo");
					this.Onid_rdoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ausente", DbType="SmallInt")]
		public System.Nullable<short> id_ausente
		{
			get
			{
				return this._id_ausente;
			}
			set
			{
				if ((this._id_ausente != value))
				{
					this.Onid_ausenteChanging(value);
					this.SendPropertyChanging();
					this._id_ausente = value;
					this.SendPropertyChanged("id_ausente");
					this.Onid_ausenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Partido_Rdo_Partido", Storage="_Partido", ThisKey="id_partido", OtherKey="id_partido", IsForeignKey=true)]
		public Partido Partido
		{
			get
			{
				return this._Partido.Entity;
			}
			set
			{
				Partido previousValue = this._Partido.Entity;
				if (((previousValue != value) 
							|| (this._Partido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Partido.Entity = null;
						previousValue.Rdo_Partido.Remove(this);
					}
					this._Partido.Entity = value;
					if ((value != null))
					{
						value.Rdo_Partido.Add(this);
						this._id_partido = value.id_partido;
					}
					else
					{
						this._id_partido = default(short);
					}
					this.SendPropertyChanged("Partido");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resultado_Rdo_Partido", Storage="_Resultado", ThisKey="id_rdo", OtherKey="id_rdo", IsForeignKey=true)]
		public Resultado Resultado
		{
			get
			{
				return this._Resultado.Entity;
			}
			set
			{
				Resultado previousValue = this._Resultado.Entity;
				if (((previousValue != value) 
							|| (this._Resultado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resultado.Entity = null;
						previousValue.Rdo_Partido.Remove(this);
					}
					this._Resultado.Entity = value;
					if ((value != null))
					{
						value.Rdo_Partido.Add(this);
						this._id_rdo = value.id_rdo;
					}
					else
					{
						this._id_rdo = default(short);
					}
					this.SendPropertyChanged("Resultado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resultado")]
	public partial class Resultado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id_rdo;
		
		private System.Nullable<short> _id_ganador;
		
		private System.Nullable<int> _puntosP1;
		
		private System.Nullable<int> _puntosP2;
		
		private System.Data.Linq.Binary _empate;
		
		private System.Nullable<int> _cantSets;
		
		private EntitySet<Historial_de_Resultado> _Historial_de_Resultado;
		
		private EntitySet<Set> _Set;
		
		private EntitySet<Rdo_Partido> _Rdo_Partido;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_rdoChanging(short value);
    partial void Onid_rdoChanged();
    partial void Onid_ganadorChanging(System.Nullable<short> value);
    partial void Onid_ganadorChanged();
    partial void OnpuntosP1Changing(System.Nullable<int> value);
    partial void OnpuntosP1Changed();
    partial void OnpuntosP2Changing(System.Nullable<int> value);
    partial void OnpuntosP2Changed();
    partial void OnempateChanging(System.Data.Linq.Binary value);
    partial void OnempateChanged();
    partial void OncantSetsChanging(System.Nullable<int> value);
    partial void OncantSetsChanged();
    #endregion
		
		public Resultado()
		{
			this._Historial_de_Resultado = new EntitySet<Historial_de_Resultado>(new Action<Historial_de_Resultado>(this.attach_Historial_de_Resultado), new Action<Historial_de_Resultado>(this.detach_Historial_de_Resultado));
			this._Set = new EntitySet<Set>(new Action<Set>(this.attach_Set), new Action<Set>(this.detach_Set));
			this._Rdo_Partido = new EntitySet<Rdo_Partido>(new Action<Rdo_Partido>(this.attach_Rdo_Partido), new Action<Rdo_Partido>(this.detach_Rdo_Partido));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rdo", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short id_rdo
		{
			get
			{
				return this._id_rdo;
			}
			set
			{
				if ((this._id_rdo != value))
				{
					this.Onid_rdoChanging(value);
					this.SendPropertyChanging();
					this._id_rdo = value;
					this.SendPropertyChanged("id_rdo");
					this.Onid_rdoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ganador", DbType="SmallInt")]
		public System.Nullable<short> id_ganador
		{
			get
			{
				return this._id_ganador;
			}
			set
			{
				if ((this._id_ganador != value))
				{
					this.Onid_ganadorChanging(value);
					this.SendPropertyChanging();
					this._id_ganador = value;
					this.SendPropertyChanged("id_ganador");
					this.Onid_ganadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_puntosP1", DbType="Int")]
		public System.Nullable<int> puntosP1
		{
			get
			{
				return this._puntosP1;
			}
			set
			{
				if ((this._puntosP1 != value))
				{
					this.OnpuntosP1Changing(value);
					this.SendPropertyChanging();
					this._puntosP1 = value;
					this.SendPropertyChanged("puntosP1");
					this.OnpuntosP1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_puntosP2", DbType="Int")]
		public System.Nullable<int> puntosP2
		{
			get
			{
				return this._puntosP2;
			}
			set
			{
				if ((this._puntosP2 != value))
				{
					this.OnpuntosP2Changing(value);
					this.SendPropertyChanging();
					this._puntosP2 = value;
					this.SendPropertyChanged("puntosP2");
					this.OnpuntosP2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empate", DbType="Binary(50)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary empate
		{
			get
			{
				return this._empate;
			}
			set
			{
				if ((this._empate != value))
				{
					this.OnempateChanging(value);
					this.SendPropertyChanging();
					this._empate = value;
					this.SendPropertyChanged("empate");
					this.OnempateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cantSets", DbType="Int")]
		public System.Nullable<int> cantSets
		{
			get
			{
				return this._cantSets;
			}
			set
			{
				if ((this._cantSets != value))
				{
					this.OncantSetsChanging(value);
					this.SendPropertyChanging();
					this._cantSets = value;
					this.SendPropertyChanged("cantSets");
					this.OncantSetsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resultado_Historial_de_Resultado", Storage="_Historial_de_Resultado", ThisKey="id_rdo", OtherKey="id_rdo")]
		public EntitySet<Historial_de_Resultado> Historial_de_Resultado
		{
			get
			{
				return this._Historial_de_Resultado;
			}
			set
			{
				this._Historial_de_Resultado.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resultado_Set", Storage="_Set", ThisKey="id_rdo", OtherKey="id_rdo")]
		public EntitySet<Set> Set
		{
			get
			{
				return this._Set;
			}
			set
			{
				this._Set.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resultado_Rdo_Partido", Storage="_Rdo_Partido", ThisKey="id_rdo", OtherKey="id_rdo")]
		public EntitySet<Rdo_Partido> Rdo_Partido
		{
			get
			{
				return this._Rdo_Partido;
			}
			set
			{
				this._Rdo_Partido.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Historial_de_Resultado(Historial_de_Resultado entity)
		{
			this.SendPropertyChanging();
			entity.Resultado = this;
		}
		
		private void detach_Historial_de_Resultado(Historial_de_Resultado entity)
		{
			this.SendPropertyChanging();
			entity.Resultado = null;
		}
		
		private void attach_Set(Set entity)
		{
			this.SendPropertyChanging();
			entity.Resultado = this;
		}
		
		private void detach_Set(Set entity)
		{
			this.SendPropertyChanging();
			entity.Resultado = null;
		}
		
		private void attach_Rdo_Partido(Rdo_Partido entity)
		{
			this.SendPropertyChanging();
			entity.Resultado = this;
		}
		
		private void detach_Rdo_Partido(Rdo_Partido entity)
		{
			this.SendPropertyChanging();
			entity.Resultado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _e_mail;
		
		private string _contraseña;
		
		private string _Apellido;
		
		private string _Nombre;
		
		private string _tipo_DNI;
		
		private System.Nullable<int> _nro_DNI;
		
		private System.Nullable<short> _id_localidad;
		
		private EntitySet<CompetenciaDeportiva> _CompetenciaDeportiva;
		
		private EntitySet<Lugar_de_Realización> _Lugar_de_Realización;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void One_mailChanging(string value);
    partial void One_mailChanged();
    partial void OncontraseñaChanging(string value);
    partial void OncontraseñaChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void Ontipo_DNIChanging(string value);
    partial void Ontipo_DNIChanged();
    partial void Onnro_DNIChanging(System.Nullable<int> value);
    partial void Onnro_DNIChanged();
    partial void Onid_localidadChanging(System.Nullable<short> value);
    partial void Onid_localidadChanged();
    #endregion
		
		public Usuario()
		{
			this._CompetenciaDeportiva = new EntitySet<CompetenciaDeportiva>(new Action<CompetenciaDeportiva>(this.attach_CompetenciaDeportiva), new Action<CompetenciaDeportiva>(this.detach_CompetenciaDeportiva));
			this._Lugar_de_Realización = new EntitySet<Lugar_de_Realización>(new Action<Lugar_de_Realización>(this.attach_Lugar_de_Realización), new Action<Lugar_de_Realización>(this.detach_Lugar_de_Realización));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[e-mail]", Storage="_e_mail", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string e_mail
		{
			get
			{
				return this._e_mail;
			}
			set
			{
				if ((this._e_mail != value))
				{
					this.One_mailChanging(value);
					this.SendPropertyChanging();
					this._e_mail = value;
					this.SendPropertyChanged("e_mail");
					this.One_mailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contraseña", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string contraseña
		{
			get
			{
				return this._contraseña;
			}
			set
			{
				if ((this._contraseña != value))
				{
					this.OncontraseñaChanging(value);
					this.SendPropertyChanging();
					this._contraseña = value;
					this.SendPropertyChanged("contraseña");
					this.OncontraseñaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="NVarChar(50)")]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo_DNI", DbType="NVarChar(20)")]
		public string tipo_DNI
		{
			get
			{
				return this._tipo_DNI;
			}
			set
			{
				if ((this._tipo_DNI != value))
				{
					this.Ontipo_DNIChanging(value);
					this.SendPropertyChanging();
					this._tipo_DNI = value;
					this.SendPropertyChanged("tipo_DNI");
					this.Ontipo_DNIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nro_DNI", DbType="Int")]
		public System.Nullable<int> nro_DNI
		{
			get
			{
				return this._nro_DNI;
			}
			set
			{
				if ((this._nro_DNI != value))
				{
					this.Onnro_DNIChanging(value);
					this.SendPropertyChanging();
					this._nro_DNI = value;
					this.SendPropertyChanged("nro_DNI");
					this.Onnro_DNIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_localidad", DbType="SmallInt")]
		public System.Nullable<short> id_localidad
		{
			get
			{
				return this._id_localidad;
			}
			set
			{
				if ((this._id_localidad != value))
				{
					this.Onid_localidadChanging(value);
					this.SendPropertyChanging();
					this._id_localidad = value;
					this.SendPropertyChanged("id_localidad");
					this.Onid_localidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_CompetenciaDeportiva", Storage="_CompetenciaDeportiva", ThisKey="e_mail", OtherKey="e_mail_usuario")]
		public EntitySet<CompetenciaDeportiva> CompetenciaDeportiva
		{
			get
			{
				return this._CompetenciaDeportiva;
			}
			set
			{
				this._CompetenciaDeportiva.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Lugar_de_Realización", Storage="_Lugar_de_Realización", ThisKey="e_mail", OtherKey="e_mail_usuario")]
		public EntitySet<Lugar_de_Realización> Lugar_de_Realización
		{
			get
			{
				return this._Lugar_de_Realización;
			}
			set
			{
				this._Lugar_de_Realización.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CompetenciaDeportiva(CompetenciaDeportiva entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_CompetenciaDeportiva(CompetenciaDeportiva entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_Lugar_de_Realización(Lugar_de_Realización entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Lugar_de_Realización(Lugar_de_Realización entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Deporte")]
	public partial class Deporte : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id_deporte;
		
		private string _nombre;
		
		private System.Nullable<short> _id_lugar;
		
		private EntitySet<CompetenciaDeportiva> _CompetenciaDeportiva;
		
		private EntityRef<Lugar_de_Realización> _Lugar_de_Realización;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_deporteChanging(short value);
    partial void Onid_deporteChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void Onid_lugarChanging(System.Nullable<short> value);
    partial void Onid_lugarChanged();
    #endregion
		
		public Deporte()
		{
			this._CompetenciaDeportiva = new EntitySet<CompetenciaDeportiva>(new Action<CompetenciaDeportiva>(this.attach_CompetenciaDeportiva), new Action<CompetenciaDeportiva>(this.detach_CompetenciaDeportiva));
			this._Lugar_de_Realización = default(EntityRef<Lugar_de_Realización>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_deporte", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short id_deporte
		{
			get
			{
				return this._id_deporte;
			}
			set
			{
				if ((this._id_deporte != value))
				{
					this.Onid_deporteChanging(value);
					this.SendPropertyChanging();
					this._id_deporte = value;
					this.SendPropertyChanged("id_deporte");
					this.Onid_deporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NVarChar(50)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_lugar", DbType="SmallInt")]
		public System.Nullable<short> id_lugar
		{
			get
			{
				return this._id_lugar;
			}
			set
			{
				if ((this._id_lugar != value))
				{
					if (this._Lugar_de_Realización.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_lugarChanging(value);
					this.SendPropertyChanging();
					this._id_lugar = value;
					this.SendPropertyChanged("id_lugar");
					this.Onid_lugarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Deporte_CompetenciaDeportiva", Storage="_CompetenciaDeportiva", ThisKey="id_deporte", OtherKey="id_deporte")]
		public EntitySet<CompetenciaDeportiva> CompetenciaDeportiva
		{
			get
			{
				return this._CompetenciaDeportiva;
			}
			set
			{
				this._CompetenciaDeportiva.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lugar_de_Realización_Deporte", Storage="_Lugar_de_Realización", ThisKey="id_lugar", OtherKey="id_lugar", IsForeignKey=true)]
		public Lugar_de_Realización Lugar_de_Realización
		{
			get
			{
				return this._Lugar_de_Realización.Entity;
			}
			set
			{
				Lugar_de_Realización previousValue = this._Lugar_de_Realización.Entity;
				if (((previousValue != value) 
							|| (this._Lugar_de_Realización.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lugar_de_Realización.Entity = null;
						previousValue.Deporte.Remove(this);
					}
					this._Lugar_de_Realización.Entity = value;
					if ((value != null))
					{
						value.Deporte.Add(this);
						this._id_lugar = value.id_lugar;
					}
					else
					{
						this._id_lugar = default(Nullable<short>);
					}
					this.SendPropertyChanged("Lugar_de_Realización");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CompetenciaDeportiva(CompetenciaDeportiva entity)
		{
			this.SendPropertyChanging();
			entity.Deporte = this;
		}
		
		private void detach_CompetenciaDeportiva(CompetenciaDeportiva entity)
		{
			this.SendPropertyChanging();
			entity.Deporte = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Forma de Puntuacion]")]
	public partial class Forma_de_Puntuacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id_forma;
		
		private System.Nullable<short> _cant_sets;
		
		private System.Nullable<int> _tantos_x_ausencia_del_rival;
		
		private string _nombre;
		
		private EntitySet<Modalidad> _Modalidad;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_formaChanging(short value);
    partial void Onid_formaChanged();
    partial void Oncant_setsChanging(System.Nullable<short> value);
    partial void Oncant_setsChanged();
    partial void Ontantos_x_ausencia_del_rivalChanging(System.Nullable<int> value);
    partial void Ontantos_x_ausencia_del_rivalChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public Forma_de_Puntuacion()
		{
			this._Modalidad = new EntitySet<Modalidad>(new Action<Modalidad>(this.attach_Modalidad), new Action<Modalidad>(this.detach_Modalidad));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_forma", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short id_forma
		{
			get
			{
				return this._id_forma;
			}
			set
			{
				if ((this._id_forma != value))
				{
					this.Onid_formaChanging(value);
					this.SendPropertyChanging();
					this._id_forma = value;
					this.SendPropertyChanged("id_forma");
					this.Onid_formaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cant_sets", DbType="SmallInt")]
		public System.Nullable<short> cant_sets
		{
			get
			{
				return this._cant_sets;
			}
			set
			{
				if ((this._cant_sets != value))
				{
					this.Oncant_setsChanging(value);
					this.SendPropertyChanging();
					this._cant_sets = value;
					this.SendPropertyChanged("cant_sets");
					this.Oncant_setsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tantos_x_ausencia_del_rival", DbType="Int")]
		public System.Nullable<int> tantos_x_ausencia_del_rival
		{
			get
			{
				return this._tantos_x_ausencia_del_rival;
			}
			set
			{
				if ((this._tantos_x_ausencia_del_rival != value))
				{
					this.Ontantos_x_ausencia_del_rivalChanging(value);
					this.SendPropertyChanging();
					this._tantos_x_ausencia_del_rival = value;
					this.SendPropertyChanged("tantos_x_ausencia_del_rival");
					this.Ontantos_x_ausencia_del_rivalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NVarChar(30)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Forma_de_Puntuacion_Modalidad", Storage="_Modalidad", ThisKey="id_forma", OtherKey="id_forma")]
		public EntitySet<Modalidad> Modalidad
		{
			get
			{
				return this._Modalidad;
			}
			set
			{
				this._Modalidad.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Modalidad(Modalidad entity)
		{
			this.SendPropertyChanging();
			entity.Forma_de_Puntuacion = this;
		}
		
		private void detach_Modalidad(Modalidad entity)
		{
			this.SendPropertyChanging();
			entity.Forma_de_Puntuacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Modalidad")]
	public partial class Modalidad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id_modalidad;
		
		private System.Nullable<int> _ptos_por_PG;
		
		private System.Nullable<bool> _empate;
		
		private System.Nullable<int> _ptos_empate;
		
		private System.Nullable<int> _ptos_por_presentarse;
		
		private System.Nullable<short> _id_forma;
		
		private string _nombre;
		
		private EntitySet<CompetenciaDeportiva> _CompetenciaDeportiva;
		
		private EntityRef<Forma_de_Puntuacion> _Forma_de_Puntuacion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_modalidadChanging(short value);
    partial void Onid_modalidadChanged();
    partial void Onptos_por_PGChanging(System.Nullable<int> value);
    partial void Onptos_por_PGChanged();
    partial void OnempateChanging(System.Nullable<bool> value);
    partial void OnempateChanged();
    partial void Onptos_empateChanging(System.Nullable<int> value);
    partial void Onptos_empateChanged();
    partial void Onptos_por_presentarseChanging(System.Nullable<int> value);
    partial void Onptos_por_presentarseChanged();
    partial void Onid_formaChanging(System.Nullable<short> value);
    partial void Onid_formaChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public Modalidad()
		{
			this._CompetenciaDeportiva = new EntitySet<CompetenciaDeportiva>(new Action<CompetenciaDeportiva>(this.attach_CompetenciaDeportiva), new Action<CompetenciaDeportiva>(this.detach_CompetenciaDeportiva));
			this._Forma_de_Puntuacion = default(EntityRef<Forma_de_Puntuacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_modalidad", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short id_modalidad
		{
			get
			{
				return this._id_modalidad;
			}
			set
			{
				if ((this._id_modalidad != value))
				{
					this.Onid_modalidadChanging(value);
					this.SendPropertyChanging();
					this._id_modalidad = value;
					this.SendPropertyChanged("id_modalidad");
					this.Onid_modalidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ptos_por_PG", DbType="Int")]
		public System.Nullable<int> ptos_por_PG
		{
			get
			{
				return this._ptos_por_PG;
			}
			set
			{
				if ((this._ptos_por_PG != value))
				{
					this.Onptos_por_PGChanging(value);
					this.SendPropertyChanging();
					this._ptos_por_PG = value;
					this.SendPropertyChanged("ptos_por_PG");
					this.Onptos_por_PGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empate", DbType="Bit")]
		public System.Nullable<bool> empate
		{
			get
			{
				return this._empate;
			}
			set
			{
				if ((this._empate != value))
				{
					this.OnempateChanging(value);
					this.SendPropertyChanging();
					this._empate = value;
					this.SendPropertyChanged("empate");
					this.OnempateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ptos_empate", DbType="Int")]
		public System.Nullable<int> ptos_empate
		{
			get
			{
				return this._ptos_empate;
			}
			set
			{
				if ((this._ptos_empate != value))
				{
					this.Onptos_empateChanging(value);
					this.SendPropertyChanging();
					this._ptos_empate = value;
					this.SendPropertyChanged("ptos_empate");
					this.Onptos_empateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ptos_por_presentarse", DbType="Int")]
		public System.Nullable<int> ptos_por_presentarse
		{
			get
			{
				return this._ptos_por_presentarse;
			}
			set
			{
				if ((this._ptos_por_presentarse != value))
				{
					this.Onptos_por_presentarseChanging(value);
					this.SendPropertyChanging();
					this._ptos_por_presentarse = value;
					this.SendPropertyChanged("ptos_por_presentarse");
					this.Onptos_por_presentarseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_forma", DbType="SmallInt")]
		public System.Nullable<short> id_forma
		{
			get
			{
				return this._id_forma;
			}
			set
			{
				if ((this._id_forma != value))
				{
					if (this._Forma_de_Puntuacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_formaChanging(value);
					this.SendPropertyChanging();
					this._id_forma = value;
					this.SendPropertyChanged("id_forma");
					this.Onid_formaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NVarChar(30)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Modalidad_CompetenciaDeportiva", Storage="_CompetenciaDeportiva", ThisKey="id_modalidad", OtherKey="id_modalidad")]
		public EntitySet<CompetenciaDeportiva> CompetenciaDeportiva
		{
			get
			{
				return this._CompetenciaDeportiva;
			}
			set
			{
				this._CompetenciaDeportiva.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Forma_de_Puntuacion_Modalidad", Storage="_Forma_de_Puntuacion", ThisKey="id_forma", OtherKey="id_forma", IsForeignKey=true)]
		public Forma_de_Puntuacion Forma_de_Puntuacion
		{
			get
			{
				return this._Forma_de_Puntuacion.Entity;
			}
			set
			{
				Forma_de_Puntuacion previousValue = this._Forma_de_Puntuacion.Entity;
				if (((previousValue != value) 
							|| (this._Forma_de_Puntuacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Forma_de_Puntuacion.Entity = null;
						previousValue.Modalidad.Remove(this);
					}
					this._Forma_de_Puntuacion.Entity = value;
					if ((value != null))
					{
						value.Modalidad.Add(this);
						this._id_forma = value.id_forma;
					}
					else
					{
						this._id_forma = default(Nullable<short>);
					}
					this.SendPropertyChanged("Forma_de_Puntuacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CompetenciaDeportiva(CompetenciaDeportiva entity)
		{
			this.SendPropertyChanging();
			entity.Modalidad = this;
		}
		
		private void detach_CompetenciaDeportiva(CompetenciaDeportiva entity)
		{
			this.SendPropertyChanging();
			entity.Modalidad = null;
		}
	}
}
#pragma warning restore 1591
